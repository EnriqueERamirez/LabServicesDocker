version: '3.7'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
        #      - ./certbot/conf:/etc/letsencrypt
        #      - ./certbot/www:/var/www/certbot
    depends_on:
      - gitlab
      - rocketchat
      - grafana
      - openproject


  gitlab:
    image: gitlab/gitlab-ce:latest
      #   hostname: gitlab.ieeuach.cl
    shm_size: '2gb'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.ieeuach.cl'
        nginx['listen_port'] = 31080
        nginx['listen_https'] = false
        letsencrypt['enable'] = false
        gitlab_rails['gitlab_shell_ssh_port'] = 31022
        registry_external_url 'http://registry.ieeuach.cl'
        registry_nginx['listen_https'] = false
        registry_nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "http",
          "X-Forwarded-Ssl" => "on"
        }
    ports:
      - '31080:31080'
      - '31022:31022'
    volumes:
    - './gitlab/config:/etc/gitlab'
    - './gitlab/logs:/var/log/gitlab'
    - './gitlab/data:/var/opt/gitlab'
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    restart: always
    env_file: 
      - ./envs/rocketchat.env
    depends_on:
      - mongodb

  mongodb:
    image: docker.io/bitnami/mongodb:5.0
    restart: always
    volumes:
      - ./data/mongodb_data:/bitnami/mongodb
    env_file: 
      - ./envs/mongo.env
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./data/grafana/data:/var/lib/grafana
    env_file: 
      - ./envs/grafana.env
  openproject:
    image: openproject/community:10
    volumes:
      - ./data/openproject/pgdata:/var/openproject/pgdata
      - ./data/openproject/logs:/var/log/supervisor
    env_file: 
      - ./envs/openproject.env

    ports:
      - "8080:8080"
    depends_on:
      - db
  db:
    image: postgres:11
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    env_file: 
      - ./envs/postgres.env
  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    restart: always
    ports:
      - '8086:8086'
    volumes:
      - ./data/influxdb_data:/var/lib/influxdb
    env_file: 
      - ./envs/influxdb.env

